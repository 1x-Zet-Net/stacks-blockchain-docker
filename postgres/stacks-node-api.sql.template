CREATE ROLE ${API_PG_USER} LOGIN PASSWORD '${POSTGRES_PASSWORD}';
--
-- ${API_PG_SCHEMA} db setup
--
create database ${API_PG_DATABASE};
revoke all on database ${API_PG_DATABASE} from public;
grant all privileges on database ${API_PG_DATABASE} to postgres;
grant connect, temp on database ${API_PG_DATABASE} to ${API_PG_USER};
--
-- ${API_PG_SCHEMA} permissions
--
\c ${API_PG_DATABASE};
DROP SCHEMA IF EXISTS ${API_PG_SCHEMA} CASCADE;
grant ${API_PG_USER} to postgres;
alter database ${API_PG_DATABASE} set default_transaction_read_only = off;
alter database ${API_PG_DATABASE} owner to postgres;
create schema if not exists ${API_PG_SCHEMA} authorization ${API_PG_USER};
alter database ${API_PG_DATABASE} set search_path TO ${API_PG_SCHEMA},public;
alter user ${API_PG_USER} set search_path TO ${API_PG_SCHEMA},public;
revoke all on schema public from public;
revoke all on schema ${API_PG_SCHEMA} from public;
grant connect, temp on database ${API_PG_DATABASE} to ${API_PG_USER};
grant all on schema ${API_PG_SCHEMA} to postgres;
grant create, usage on schema ${API_PG_SCHEMA} to ${API_PG_USER};
